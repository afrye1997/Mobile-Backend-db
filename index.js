"use strict"
require('dotenv').config();
const express= require('express')
const cors= require('cors')

const app= express();
var cloudinary = require('cloudinary').v2;
app.use(cors());
const bodyParser = require("body-parser");
app.use(bodyParser.json());
const PORT= 4000;
app.use(cors());


const user= require ("./routes/user")
app.use("/users", user);

const interest= require ("./routes/interest")
app.use("/interest", interest);


app.get("/", (req,res)=>{
    res.send("CRUD API running")

});
var uploads = {};
app.get("/pfp", (req,res)=>{
    res.send("CRUD API running")
    cloudinary.uploader.upload('pizza.jpg', { tags: 'basic_sample' }, function (err, image) {
        console.log();
        console.log("** File Upload");
        if (err) { console.warn(err); }
        console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
        console.log("* " + image.public_id);
        console.log("* " + image.url);
        waitForAllUploads("pizza", err, image);
      });
      
});
function waitForAllUploads(id, err, image) {
    uploads[id] = image;
    var ids = Object.keys(uploads);
    if (ids.length === 6) {
      console.log();
      console.log('**  uploaded all files (' + ids.join(',') + ') to cloudinary');
      performTransformations();
    }
  }
  

app.listen(PORT,  err=>{ 
    (err===null? console.log("ERROR", err):console.log("CRUD API running") )
});

//TODO
/**
 * 1) CREATE A USER
 * 2) READ A USER
 * 3) UPDATE A USER
 * 4) DELETE A USER
 */

//  {
//      "bool":false,
//      "actual_msg":err.msg
//  }